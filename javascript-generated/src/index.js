/**
 * Kunta API
 * One API to rule them all. One API to find them, One API to bring them all and in the darkness bind them.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Attachment', 'model/BadRequest', 'model/Banner', 'model/Event', 'model/Forbidden', 'model/InternalServerError', 'model/LocalizedValue', 'model/NewsArticle', 'model/NotFound', 'model/NotImplemented', 'model/Organization', 'model/Service', 'model/ServiceChannelAttachment', 'model/ServiceChannelCommon', 'model/ServiceChannelServiceHour', 'model/ServiceChannelSupport', 'model/ServiceChannelWebPage', 'model/ServiceClass', 'model/ServiceElectronicChannel', 'model/Tile', 'api/BannersApi', 'api/EventsApi', 'api/NewsApi', 'api/OrganizationsApi', 'api/ServiceCategoriesApi', 'api/ServiceChannelsApi', 'api/ServicesApi', 'api/TilesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Attachment'), require('./model/BadRequest'), require('./model/Banner'), require('./model/Event'), require('./model/Forbidden'), require('./model/InternalServerError'), require('./model/LocalizedValue'), require('./model/NewsArticle'), require('./model/NotFound'), require('./model/NotImplemented'), require('./model/Organization'), require('./model/Service'), require('./model/ServiceChannelAttachment'), require('./model/ServiceChannelCommon'), require('./model/ServiceChannelServiceHour'), require('./model/ServiceChannelSupport'), require('./model/ServiceChannelWebPage'), require('./model/ServiceClass'), require('./model/ServiceElectronicChannel'), require('./model/Tile'), require('./api/BannersApi'), require('./api/EventsApi'), require('./api/NewsApi'), require('./api/OrganizationsApi'), require('./api/ServiceCategoriesApi'), require('./api/ServiceChannelsApi'), require('./api/ServicesApi'), require('./api/TilesApi'));
  }
}(function(ApiClient, Attachment, BadRequest, Banner, Event, Forbidden, InternalServerError, LocalizedValue, NewsArticle, NotFound, NotImplemented, Organization, Service, ServiceChannelAttachment, ServiceChannelCommon, ServiceChannelServiceHour, ServiceChannelSupport, ServiceChannelWebPage, ServiceClass, ServiceElectronicChannel, Tile, BannersApi, EventsApi, NewsApi, OrganizationsApi, ServiceCategoriesApi, ServiceChannelsApi, ServicesApi, TilesApi) {
  'use strict';

  /**
   * One_API_to_rule_them_all__One_API_to_find_them_One_API_to_bring_them_all_and_in_the_darkness_bind_them_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var KuntaApiClient = require('index'); // See note below*.
   * var xxxSvc = new KuntaApiClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new KuntaApiClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new KuntaApiClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new KuntaApiClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.7
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Attachment model constructor.
     * @property {module:model/Attachment}
     */
    Attachment: Attachment,
    /**
     * The BadRequest model constructor.
     * @property {module:model/BadRequest}
     */
    BadRequest: BadRequest,
    /**
     * The Banner model constructor.
     * @property {module:model/Banner}
     */
    Banner: Banner,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The Forbidden model constructor.
     * @property {module:model/Forbidden}
     */
    Forbidden: Forbidden,
    /**
     * The InternalServerError model constructor.
     * @property {module:model/InternalServerError}
     */
    InternalServerError: InternalServerError,
    /**
     * The LocalizedValue model constructor.
     * @property {module:model/LocalizedValue}
     */
    LocalizedValue: LocalizedValue,
    /**
     * The NewsArticle model constructor.
     * @property {module:model/NewsArticle}
     */
    NewsArticle: NewsArticle,
    /**
     * The NotFound model constructor.
     * @property {module:model/NotFound}
     */
    NotFound: NotFound,
    /**
     * The NotImplemented model constructor.
     * @property {module:model/NotImplemented}
     */
    NotImplemented: NotImplemented,
    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization: Organization,
    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service: Service,
    /**
     * The ServiceChannelAttachment model constructor.
     * @property {module:model/ServiceChannelAttachment}
     */
    ServiceChannelAttachment: ServiceChannelAttachment,
    /**
     * The ServiceChannelCommon model constructor.
     * @property {module:model/ServiceChannelCommon}
     */
    ServiceChannelCommon: ServiceChannelCommon,
    /**
     * The ServiceChannelServiceHour model constructor.
     * @property {module:model/ServiceChannelServiceHour}
     */
    ServiceChannelServiceHour: ServiceChannelServiceHour,
    /**
     * The ServiceChannelSupport model constructor.
     * @property {module:model/ServiceChannelSupport}
     */
    ServiceChannelSupport: ServiceChannelSupport,
    /**
     * The ServiceChannelWebPage model constructor.
     * @property {module:model/ServiceChannelWebPage}
     */
    ServiceChannelWebPage: ServiceChannelWebPage,
    /**
     * The ServiceClass model constructor.
     * @property {module:model/ServiceClass}
     */
    ServiceClass: ServiceClass,
    /**
     * The ServiceElectronicChannel model constructor.
     * @property {module:model/ServiceElectronicChannel}
     */
    ServiceElectronicChannel: ServiceElectronicChannel,
    /**
     * The Tile model constructor.
     * @property {module:model/Tile}
     */
    Tile: Tile,
    /**
     * The BannersApi service constructor.
     * @property {module:api/BannersApi}
     */
    BannersApi: BannersApi,
    /**
     * The EventsApi service constructor.
     * @property {module:api/EventsApi}
     */
    EventsApi: EventsApi,
    /**
     * The NewsApi service constructor.
     * @property {module:api/NewsApi}
     */
    NewsApi: NewsApi,
    /**
     * The OrganizationsApi service constructor.
     * @property {module:api/OrganizationsApi}
     */
    OrganizationsApi: OrganizationsApi,
    /**
     * The ServiceCategoriesApi service constructor.
     * @property {module:api/ServiceCategoriesApi}
     */
    ServiceCategoriesApi: ServiceCategoriesApi,
    /**
     * The ServiceChannelsApi service constructor.
     * @property {module:api/ServiceChannelsApi}
     */
    ServiceChannelsApi: ServiceChannelsApi,
    /**
     * The ServicesApi service constructor.
     * @property {module:api/ServicesApi}
     */
    ServicesApi: ServicesApi,
    /**
     * The TilesApi service constructor.
     * @property {module:api/TilesApi}
     */
    TilesApi: TilesApi
  };

  return exports;
}));
