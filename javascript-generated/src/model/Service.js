/**
 * Kunta API
 * One API to rule them all. One API to find them, One API to bring them all and in the darkness bind them.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LocalizedValue'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LocalizedValue'));
  } else {
    // Browser globals (root is window)
    if (!root.KuntaApiClient) {
      root.KuntaApiClient = {};
    }
    root.KuntaApiClient.Service = factory(root.KuntaApiClient.ApiClient, root.KuntaApiClient.LocalizedValue);
  }
}(this, function(ApiClient, LocalizedValue) {
  'use strict';




  /**
   * The Service model module.
   * @module model/Service
   * @version 0.0.7
   */

  /**
   * Constructs a new <code>Service</code>.
   * @alias module:model/Service
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>Service</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Service} obj Optional instance to populate.
   * @return {module:model/Service} The populated <code>Service</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('shortDescriptions')) {
        obj['shortDescriptions'] = ApiClient.convertToType(data['shortDescriptions'], [LocalizedValue]);
      }
      if (data.hasOwnProperty('descriptions')) {
        obj['descriptions'] = ApiClient.convertToType(data['descriptions'], [LocalizedValue]);
      }
      if (data.hasOwnProperty('serviceUserInstructions')) {
        obj['serviceUserInstructions'] = ApiClient.convertToType(data['serviceUserInstructions'], [LocalizedValue]);
      }
      if (data.hasOwnProperty('names')) {
        obj['names'] = ApiClient.convertToType(data['names'], [LocalizedValue]);
      }
      if (data.hasOwnProperty('alternativeNames')) {
        obj['alternativeNames'] = ApiClient.convertToType(data['alternativeNames'], [LocalizedValue]);
      }
      if (data.hasOwnProperty('classIds')) {
        obj['classIds'] = ApiClient.convertToType(data['classIds'], ['String']);
      }
      if (data.hasOwnProperty('electronicChannelIds')) {
        obj['electronicChannelIds'] = ApiClient.convertToType(data['electronicChannelIds'], ['String']);
      }
      if (data.hasOwnProperty('phoneChannelIds')) {
        obj['phoneChannelIds'] = ApiClient.convertToType(data['phoneChannelIds'], ['String']);
      }
      if (data.hasOwnProperty('printableFormChannelIds')) {
        obj['printableFormChannelIds'] = ApiClient.convertToType(data['printableFormChannelIds'], ['String']);
      }
      if (data.hasOwnProperty('serviceLocationChannelIds')) {
        obj['serviceLocationChannelIds'] = ApiClient.convertToType(data['serviceLocationChannelIds'], ['String']);
      }
      if (data.hasOwnProperty('webpageChannelIds')) {
        obj['webpageChannelIds'] = ApiClient.convertToType(data['webpageChannelIds'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Unique identifier representing a specific service.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Array.<module:model/LocalizedValue>} shortDescriptions
   */
  exports.prototype['shortDescriptions'] = undefined;
  /**
   * @member {Array.<module:model/LocalizedValue>} descriptions
   */
  exports.prototype['descriptions'] = undefined;
  /**
   * @member {Array.<module:model/LocalizedValue>} serviceUserInstructions
   */
  exports.prototype['serviceUserInstructions'] = undefined;
  /**
   * Name of the service.
   * @member {Array.<module:model/LocalizedValue>} names
   */
  exports.prototype['names'] = undefined;
  /**
   * Name of the service.
   * @member {Array.<module:model/LocalizedValue>} alternativeNames
   */
  exports.prototype['alternativeNames'] = undefined;
  /**
   * List of service classes
   * @member {Array.<String>} classIds
   */
  exports.prototype['classIds'] = undefined;
  /**
   * @member {Array.<String>} electronicChannelIds
   */
  exports.prototype['electronicChannelIds'] = undefined;
  /**
   * @member {Array.<String>} phoneChannelIds
   */
  exports.prototype['phoneChannelIds'] = undefined;
  /**
   * @member {Array.<String>} printableFormChannelIds
   */
  exports.prototype['printableFormChannelIds'] = undefined;
  /**
   * @member {Array.<String>} serviceLocationChannelIds
   */
  exports.prototype['serviceLocationChannelIds'] = undefined;
  /**
   * @member {Array.<String>} webpageChannelIds
   */
  exports.prototype['webpageChannelIds'] = undefined;



  return exports;
}));


